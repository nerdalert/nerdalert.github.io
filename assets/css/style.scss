---
# This front matter (even empty) tells Jekyll to process this file.
---

// Originally from _variables.scss
// ================================
// Fonts
$font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
$font-family-monospace: "SFMono-Regular", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

// Colors - Professional Light Theme
$color-background: #FFFFFF; // White
$color-background-alt: #F8F9FA; // Very light gray for subtle backgrounds (code, tables)
$color-text-primary: #212529; // Dark gray / Almost black
$color-text-secondary: #6C757D; // Muted gray
$color-accent-primary: #0056b3; // Professional Blue (a bit darker for better contrast on white)
$color-accent-primary-hover: #004085; // Darker blue for hover
$color-border: #DEE2E6; // Light gray for borders
$color-table-header-bg: #E9ECEF;
$color-table-header-text: $color-text-primary;

// Code Highlighting (Light Theme)
$code-background: $color-background-alt;
$code-text-color: $color-text-primary;
$code-comment: #6A737D; // Gray
$code-keyword: #D73A49; // Reddish
$code-string: #032F62; // Dark Blue
$code-number: #005CC5; // Blue
$code-class-name: #6F42C1; // Purple
$code-function-name: #005CC5; // Blue
$code-variable: #E36209; // Orange
$code-operator: #D73A49;

// Layout
$content-width: 960px;
$base-font-size: 16px;
$base-line-height: 1.6;
$spacing-unit: 20px;


// Originally from _reset.scss
// ================================
html {
  box-sizing: border-box;
  font-size: $base-font-size;
}

*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  min-height: 100vh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

input,
button,
textarea,
select {
  font: inherit;
}


// Originally from _base.scss
// ================================
body {
  font-family: $font-family-sans-serif;
  line-height: $base-line-height;
  color: $color-text-primary;
  background-color: $color-background;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

main {
  flex-grow: 1;
  padding: $spacing-unit 0;
}


// Originally from _typography.scss
// ================================
h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  line-height: 1.2;
  margin-top: $spacing-unit * 1.5;
  margin-bottom: $spacing-unit * 0.75;
  color: $color-text-primary;

  &:first-child {
    margin-top: 0;
  }
}

h1 { font-size: 2.25rem; } // ~36px
h2 { font-size: 1.875rem; } // ~30px
h3 { font-size: 1.5rem; }   // ~24px
h4 { font-size: 1.25rem; }  // ~20px
h5 { font-size: 1.125rem; } // ~18px
h6 { font-size: 1rem; }     // ~16px

p {
  margin-bottom: $spacing-unit * 0.75;
}

a {
  color: $color-accent-primary;
  text-decoration: none;
  transition: color 0.2s ease-in-out;

  &:hover, &:focus {
    color: $color-accent-primary-hover;
    text-decoration: underline;
  }
}

strong, b {
  font-weight: 600;
}

hr {
  border: 0;
  height: 1px;
  background: $color-border;
  margin: $spacing-unit * 2 0;
}


// Originally from _layout_elements.scss
// ================================
.container {
  max-width: $content-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $spacing-unit;
  padding-right: $spacing-unit;
}

.site-header {
  background-color: $color-background-alt;
  border-bottom: 1px solid $color-border;
  padding: $spacing-unit 0;
  margin-bottom: $spacing-unit;

  .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  h1 {
    margin: 0;
    font-size: 1.5rem;
    a {
      color: $color-text-primary;
      text-decoration: none;
      &:hover {
        color: $color-accent-primary;
      }
    }
  }
  nav a { // Basic nav styling if you add a nav
    margin-left: $spacing-unit;
  }
}

.site-content {
  // Uses .container internally via _layouts/default.html
}

.site-footer {
  background-color: $color-background-alt;
  border-top: 1px solid $color-border;
  padding: $spacing-unit 0;
  margin-top: $spacing-unit * 2;
  text-align: center;
  font-size: 0.9rem;
  color: $color-text-secondary;
}


// Originally from _tables.scss
// ================================
table {
  width: 100%;
  margin-bottom: $spacing-unit;
  border-collapse: collapse;
  font-size: 0.95rem;
  border: 1px solid $color-border;

  th,
  td {
    padding: $spacing-unit * 0.6; // 12px
    text-align: left;
    border: 1px solid $color-border;
  }

  thead th {
    background-color: $color-table-header-bg;
    color: $color-table-header-text;
    font-weight: 600;
    vertical-align: bottom;
  }

  tbody tr {
    &:nth-of-type(even) {
      background-color: $color-background-alt;
    }
  }
}


// Originally from _code.scss
// ================================
// Inline code
code:not(pre code) {
  font-family: $font-family-monospace;
  font-size: 0.9em;
  padding: 0.2em 0.4em;
  margin: 0 0.1em;
  background-color: $color-background-alt;
  border-radius: 3px;
  color: $color-text-primary;
}

// Code blocks
pre {
  font-family: $font-family-monospace;
  font-size: 0.9rem;
  line-height: 1.4;
  background-color: $code-background;
  border: 1px solid $color-border;
  border-radius: 4px;
  padding: $spacing-unit * 0.8;
  overflow-x: auto; // Important for long lines
  margin-bottom: $spacing-unit;

  code {
    padding: 0;
    margin: 0;
    background-color: transparent;
    border: none;
    color: $code-text-color; // Default text color inside pre
  }
}

// Basic Rouge Syntax Highlighting (Light theme)
// These are common classes generated by Jekyll's 'highlight' tag
.highlight {
  // The pre tag often gets this class too, handled above.
  // This is for the outer div if Jekyll wraps pre in div.highlight

  // Text
  .n { color: $code-text-color; } // Name
  .nb { color: $code-class-name; } // Name.Builtin
  .nc { color: $code-class-name; font-weight: bold; } // Name.Class
  .ne { color: $code-function-name; font-weight: bold; } // Name.Exception
  .nf { color: $code-function-name; } // Name.Function
  .nn { color: $code-class-name; } // Name.Namespace
  .nt { color: $code-keyword; } // Name.Tag
  .nv { color: $code-variable; } // Name.Variable
  .vg { color: $code-variable; } // Name.Variable.Global
  .vi { color: $code-variable; } // Name.Variable.Instance
  .vm { color: $code-variable; } // Name.Variable.Magic


  // Keywords
  .k { color: $code-keyword; font-weight: bold; } // Keyword
  .kc { color: $code-keyword; font-weight: bold; } // Keyword.Constant
  .kd { color: $code-keyword; font-weight: bold; } // Keyword.Declaration
  .kn { color: $code-keyword; font-weight: bold; } // Keyword.Namespace
  .kp { color: $code-keyword; font-weight: bold; } // Keyword.Pseudo
  .kr { color: $code-keyword; font-weight: bold; } // Keyword.Reserved
  .kt { color: $code-class-name; font-weight: bold; } // Keyword.Type

  // Literals
  .s { color: $code-string; } // Literal.String
  .s1 { color: $code-string; } // Literal.String.Single
  .s2 { color: $code-string; } // Literal.String.Double
  .sb { color: $code-string; } // Literal.String.Backtick
  .sc { color: $code-string; } // Literal.String.Char
  .sd { color: $code-string; } // Literal.String.Doc
  .se { color: $code-string; } // Literal.String.Escape
  .sh { color: $code-string; } // Literal.String.Heredoc
  .si { color: $code-string; } // Literal.String.Interpol
  .sr { color: $code-string; } // Literal.String.Regex
  .ss { color: $code-string; } // Literal.String.Symbol
  .m { color: $code-number; } // Literal.Number
  .mf { color: $code-number; } // Literal.Number.Float
  .mh { color: $code-number; } // Literal.Number.Hex
  .mi { color: $code-number; } // Literal.Number.Integer
  .il { color: $code-number; } // Literal.Number.Integer.Long
  .mo { color: $code-number; } // Literal.Number.Oct

  // Operators
  .o { color: $code-operator; font-weight: bold; } // Operator
  .ow { color: $code-operator; font-weight: bold; } // Operator.Word

  // Comments
  .c { color: $code-comment; font-style: italic; } // Comment
  .c1 { color: $code-comment; font-style: italic; } // Comment.Single
  .cm { color: $code-comment; font-style: italic; } // Comment.Multiline
  .cp { color: $code-comment; font-weight: bold; } // Comment.Preproc
  .cs { color: $code-comment; font-weight: bold; font-style: italic; } // Comment.Special

  // Generic
  .g { color: $code-text-color; } // Generic
  .gd { color: #F93232; } // Generic.Deleted
  .ge { font-style: italic; } // Generic.Emph
  .gr { color: #FF0000; } // Generic.Error
  .gh { color: #999999; } // Generic.Heading
  .gi { color: #50A14F; } // Generic.Inserted
  .go { color: #AAAAAA; } // Generic.Output
  .gp { color: #555555; } // Generic.Prompt
  .gs { font-weight: bold; } // Generic.Strong
  .gu { color: #AAAAAA; } // Generic.Subheading
  .gt { color: #FF0000; } // Generic.Traceback
}


// Originally from _components.scss
// ================================
details {
  border: 1px solid $color-border;
  border-radius: 4px;
  margin-bottom: $spacing-unit;
  background-color: $color-background; // Or $color-background-alt for a slight difference

  &[open] {
    summary {
      border-bottom: 1px solid $color-border;
      background-color: $color-background-alt; // Slightly different when open
    }
  }

  .highlight { // If code block is directly inside details
    margin: $spacing-unit;
    border: none; // Remove default border if pre already has one
  }
}

summary {
  padding: ($spacing-unit * 0.6) ($spacing-unit * 0.8);
  font-weight: 600;
  cursor: pointer;
  outline: none; // Or style focus state appropriately
  color: $color-accent-primary;
  transition: background-color 0.2s ease-in-out;

  &:hover, &:focus {
    background-color: $color-background-alt;
  }

  &::-webkit-details-marker { // Style the default arrow if desired, or hide
    // color: $color-accent-primary;
  }
}

// Content inside details (not the summary)
details > *:not(summary) {
  padding: $spacing-unit * 0.8;
}

details > pre {
  margin: 0; // Reset margin if it's the direct child
  border-radius: 0 0 4px 4px; // Adjust border radius if it's flush
  border-top: none; // Avoid double border with summary
  border-left: none;
  border-right: none;
  border-bottom: none;
}
